{
    "header": {
        "home": "Beranda",
        "experience": "Pengalaman",
        "projects": "Proyek",
        "articles": "Artikel",
        "switch_theme": "Ganti Tema",
        "download_cv": "Unduh CV"
    },
    "hero": {
        "title": "Halo, saya Fakhri",
        "or": "atau",
        "check_projects": "Lihat Proyek Saya"
    },
    "about": {
        "label": "Tentang Saya",
        "title": "Penasaran tentang saya? Ini dia.",
        "description": "Saya adalah seorang <strong>Mobile Developer</strong> dengan <strong>lebih dari Tiga Tahun Pengalaman</strong> dalam membangun aplikasi di berbagai sektor seperti <strong>pemerintahan, industri, dan perusahaan</strong>. Saya memiliki ketertarikan besar pada <strong>SOLID Principles</strong> dan <strong>Clean Architecture</strong>, serta telah berkontribusi dalam pembuatan <strong>end-user products</strong> maupun <strong>library internal (SDK) untuk mobile</strong>. Terampil bekerja secara mandiri maupun dalam tim, saya berkomitmen untuk terus berkembang di dunia Mobile Engineering.<br/><br/>Latar belakang saya mencakup <strong>gelar Sarjana Teknik Informatika</strong> dari <strong>Universitas Dian Nuswantoro</strong>, dengan fokus akademik pada <strong>machine learning</strong> dan <strong>keamanan siber pada aplikasi mobile</strong>. Di luar pengembangan mobile, saya juga telah mengembangkan <strong>aplikasi web dan desktop</strong> menggunakan berbagai teknologi dan framework modern, dengan fokus pada solusi yang bersih, terstruktur, dan skalabel."
    },
    "skills": {
        "label": "Keahlian",
        "title": "Keahlian, alat, dan teknologi yang saya kuasai dengan baik:"
    },
    "articles": {
        "label": "Artikel",
        "title": "Beberapa pemikiran dan tulisan yang baru-baru ini saya publikasikan:"
    },
    "experience": {
    "label": "Pengalaman",
    "title": "Berikut adalah ringkasan singkat dari pengalaman terbaru saya:",
    "items": [
        {
        "title": "Mobile Developer",
        "company": "Fischer Medical Ventures",
        "location": "Central Region, Singapura",
        "period": "Januari 2025 – Sekarang",
        "responsibilities": [
            "Mengirimkan aplikasi mobile produksi yang terhubung ke 10+ perangkat medis (USB/BLE), mendukung streaming real time, kalibrasi, dan kendali jarak jauh dengan koneksi tangguh serta alur kerja toleran kesalahan yang dipakai klinisi.",
            "Meneliti dan membuat prototipe BLE GATT, video real time, dan pembelajaran mesin di perangkat; mengubah temuan menjadi modul referensi dan dokumen keputusan yang mempercepat peluncuran ke produksi.",
            "Berkolaborasi dengan tim firmware dan backend untuk mendefinisikan protokol dan memperkuat alur, merilis aplikasi mobile siap klinik dengan dukungan offline dan retry yang kuat serta observabilitas end to end."
        ],
        "logo": "/assets/logo/asset-fmv-logo.png"
        },
        {
        "title": "Android Engineer Intern",
        "company": "Traveloka (Departemen Aktivitas Perjalanan)",
        "location": "Tangerang, Indonesia",
        "period": "Februari 2024 – Juni 2024",
        "responsibilities": [
            "Merombak modul legacy dan memperbaiki bug pada aplikasi Traveloka Android (50M+ unduhan), meningkatkan responsivitas di berbagai kelas perangkat serta memperkuat stabilitas rilis.",
            "Mengimplementasikan fitur end-to-end dengan arsitektur Clean MVVM dan MVP. Menulis unit/UI test di Kotlin dan Java, menaikkan cakupan hingga 70%+ dan menurunkan regresi saat rilis.",
            "Meneliti dan mengusulkan strategi integrasi untuk Jetpack Compose dan pustaka Android modern guna meningkatkan efisiensi pengembang dan responsivitas UI."
        ],
        "logo": "/assets/logo/asset-traveloka-logo.png"
        },
        {
        "title": "Mobile Developer",
        "company": "Freelanxx.it",
        "location": "Semarang, Indonesia",
        "period": "Januari 2022 – Februari 2024",
        "responsibilities": [
            "Merancang, membangun, dan merilis 20+ aplikasi mobile di sektor edukasi dan ritel menggunakan Kotlin/Java (Android) dan Flutter (lintas platform).",
            "Memimpin tim beranggotakan 4 orang, menjalankan sprint Agile, berkoordinasi lintas fungsi, dan menstandarkan CI/CD di GitHub, GitLab, dan CircleCI.",
            "Membangun backend API RESTful dengan Node.js dan Laravel untuk mendukung fitur mobile seperti autentikasi, pembaruan real time, dan penyimpanan data yang aman."
        ],
        "logo": "/assets/logo/asset-freelanxx-logo.png"
        },
        {
        "title": "Mobile Developer Intern",
        "company": "Schoters (Magang Berbasis Proyek)",
        "location": "Indonesia",
        "period": "Juli 2022 – Agustus 2022",
        "responsibilities": [
            "Mengirimkan fitur Android berbasis Kotlin dengan integrasi Firebase Realtime Database (pembaruan langsung) dan Crashlytics (instrumentasi, peringatan), menurunkan jenis crash berulang selama program.",
            "Menerapkan version control (Git) dan berpartisipasi dalam code review kolaboratif sebagai bagian dari program magang jarak jauh yang mensimulasikan lingkungan pengembangan nyata."
        ],
        "logo": "/assets/logo/asset-schoters-logo.jpg"
        }
    ]
    },
    "projects": {
        "label": "Proyek",
        "title": "Beberapa proyek yang pernah saya kerjakan:",
        "platform": "Platform",
        "technologies": "Teknologi",
        "clear": "Bersihkan",
        "none": "Tidak Ada Proyek",
        "filter": "Filter",
        "apply": "Terapkan",
        "click_full_detail": "klik untuk melihat detail lengkap",
        "showing": "Menampilkan {shown} dari {total} proyek",
        "items": {
            "stethoscope_project": "Stethoscope adalah aplikasi mobile untuk tenaga kesehatan guna merekam, meninjau, dan mengelola hasil stetoskop digital di titik layanan. Aplikasi berjalan di Android dan iOS, berpasangan dengan stetoskop berfitur BLE untuk menyalurkan suara jantung dan paru berkualitas tinggi, menampilkannya secara real time, lalu menautkan rekaman ke kunjungan pasien untuk pelacakan jangka panjang.",
            "xray_project": "X-Ray App adalah aplikasi tablet Android native untuk kios klinis Digihealth. Aplikasi terhubung langsung ke perangkat rontgen di ruangan, mengambil studi DICOM dari sistem pencitraan jarak jauh, dan menghadirkan peninjauan gambar yang bersih dan responsif di tangan dokter. Dokter dapat memberi label temuan, menggambar area yang diminati, mengukur sudut dan jarak, serta menyetel kontras dan pengaturan window dan level. Perangkat alat gambar menggunakan OpenCV dan pemilih warna presisi sehingga anotasi dan edit konsisten antar kasus. Semua antarmuka diatur untuk ergonomi tablet, mulai dari cubit untuk zoom hingga tombol cepat untuk overlay dan preset. Aplikasi mengikuti pola offline terlebih dahulu. Studi, edit, dan catatan disimpan lokal ketika tidak ada koneksi lalu disinkronkan ke backend saat perangkat kembali terhubung. Dalam praktiknya, visit dan konsultasi tetap berjalan tanpa menunggu jaringan sementara catatan tetap masuk ke sistem ketika koneksi pulih.",
            "digihealth_kiosk_project": "Health Kiosk adalah aplikasi tablet Android yang berjalan pada perangkat Digihealth ATM di area publik seperti klinik dan rumah sakit. Kiosk menghadirkan layanan kesehatan mandiri sehingga pasien dapat mengakses layanan dasar dengan cepat dan tanpa bantuan. Sistem terhubung ke backend terpusat melalui REST API aman untuk autentikasi, sinkronisasi data, penjadwalan janji, dan fungsi lain. Kiosk terintegrasi dengan berbagai perangkat medis seperti timbangan digital, sensor tinggi badan, oksimeter, alat ukur tekanan darah, dan termometer untuk mengumpulkan tanda vital secara real time. Untuk meningkatkan mutu layanan, kiosk juga terhubung ke modul AI untuk prediksi risiko kesehatan, triase gejala, dan rekomendasi cerdas berbasis data. Pasien dapat masuk, mengatur janji, bergabung ke antrean, dan meninjau rekam medis langsung dari antarmuka.",
            "patient_health_companion_project": "Patient Health Companion adalah aplikasi Flutter yang membawa pengalaman kiosk Digihealth ke ponsel. Aplikasi berjalan di Android dan iOS dengan tampilan yang seragam dan mudah disentuh. Pengguna dapat memperbarui profil dan data kesehatan, melihat atau memesan janji tanpa menelepon klinik, serta melakukan konsultasi video atau chat menggunakan Agora dengan tata letak yang menjaga catatan dan pesan tetap terlihat. Pencatatan harian mencakup tanda vital, nutrisi, tidur, dan target kebugaran. Aplikasi merangkum masukan tersebut menjadi tren yang jelas dan saran yang praktis, dengan wawasan AI yang muncul hanya saat bermanfaat. Companion terhubung ke backend Digihealth melalui REST API aman dan WebSocket untuk pembaruan waktu nyata. Janji, pesan, dan pengukuran tetap sinkron antara kiosk dan ponsel sehingga pengalaman terasa menyatu di rumah, saat bepergian, dan di klinik.",
            "teddy_project": "Dirilis di Traveloka 1.1.1. Saya menata ulang detail tiket untuk menonjolkan hal yang benar-benar dibandingkan pelancong: bagasi dan aturan ubah/refund, perbedaan tarif, catatan kursi dan waktu, serta syarat penyedia yang ditulis lugas. Tata letak memprioritaskan info penting di bagian atas dan mengurangi jargon, sehingga pengguna lebih yakin dan tidak perlu bolak-balik antar tab.",
            "tweety_project": "Dirilis di Traveloka 4.0.0. Saya memperbarui banyak hal mulai dari carousel hingga deskripsi tiket. Saya menambahkan bagian “Jelajahi tiket lain” di halaman detail agar pengguna bisa membandingkan waktu dan harga tanpa meninggalkan halaman. Setiap alternatif menampilkan selisih waktu, aturan tarif, sisa kursi, ketentuan bagasi, serta info ubah atau refund. Tersedia kontrol sortir dan filter cepat dengan chip perbandingan yang jelas. Alur pemesanan dari daftar hingga pemilihan penumpang saya rapikan dengan default dan pramuat yang lebih cerdas, indikator langkah yang lebih jelas, dan penanganan error yang lebih kuat. Hasilnya gangguan berkurang dan jalur menuju pembayaran terasa lebih mulus.",
            "lp_sr_cruise_project": "Dirilis di Traveloka 4.0.0. Saya memperkenalkan filter multi-pilih dengan logika ketergantungan. Saat pengguna memilih satu filter, opsi lain diperbarui untuk hanya menampilkan kombinasi yang valid, dengan chip yang bisa dihapus, state yang tetap tersimpan saat paginasi, dan URL yang bisa di deep link. Cara ini membuat eksplorasi lebih cepat dan mencegah hasil buntu.",
            "spaceAttack_kmp_swiftui": "Arcade shooter yang saya tulis sekali lalu rilis ke iOS dan Android. Inti gameplay, aturan skor, dan leaderboard ada di Kotlin Multiplatform sehingga setiap perbaikan langsung berlaku di dua platform. UI memakai SwiftUI dan Compose dengan konstanta timing yang sama, jadi animasinya terasa identik pada 60 fps. Penyimpanan lokal membuat lanjut main cepat dan ada sinkronisasi kecil di latar saat jaringan tersedia. Kode saya bagi ke modul MVVM agar gameplay, penyimpanan, dan jaringan tidak saling bocor. Proyek ini enak dijadikan template untuk gim lintas platform kecil yang tetap ingin UI native.",
            "stasave_compose": "Status saver dengan UI Compose yang bersih dan alur yang singkat. Aplikasi memindai folder media, membuat grid thumbnail yang cepat, lalu menulis berkas memakai WorkManager sehingga unduhan tetap jalan meski aplikasi di latar. Alur izin singkat dan jelas, ada pembersih penyimpanan yang menghapus sisa sementara setelah penyimpanan berhasil. Saya menambahkan aksi bagikan dan sistem snackbar kecil agar umpan balik ke pengguna terasa langsung. Kode mengikuti pola MVVM sederhana dan setiap layar punya preview untuk review UI yang cepat.",
            "beritain_swiftui": "Aplikasi berita berbasis SwiftUI yang tetap responsif saat koneksi lambat. Artikel di-cache di Core Data dan gambar dimuat dengan pipeline asinkron sehingga gulir tetap mulus. Saya pakai Swinject untuk dependency injection agar kode view tetap ringan. Tata letak mendukung banyak bahasa dan saya uji beberapa kasus pemotongan teks yang sulit. CI menjalankan SwiftLint dan unit test pada setiap push, dan refresh di latar memperbarui headline saat aplikasi sedang idle.",
            "leech_android_lib": "Pustaka unduhan Android kecil yang fokus pada keandalan. Pembungkus OkHttp ini mendukung jeda dan lanjut, menangani jaringan tidak stabil dengan aturan retry sederhana, serta menampilkan progres melalui foreground service yang aman dari perubahan konfigurasi. API memiliki titik masuk yang jelas dan aplikasi contoh berfungsi sebagai arena uji dengan kasus seperti redirect dan partial content. Permukaannya sengaja ramping agar tim bisa mengadopsi tanpa menarik ketergantungan berlebih.",
            "floating_menu_ios": "Menu aksi melayang untuk iOS yang dikirim sebagai Swift Package. Dapat di-anchorkan ke tab bar atau container kustom dan otomatis menyesuaikan safe area. Haptics sudah disiapkan, mode terang dan gelap didukung, dan jarak, ikon, serta label dapat diatur lewat beberapa parameter. Saya perhatikan betul timing animasi agar terasa cepat tanpa terlihat meloncat. Demo saya uji pada beberapa ukuran layar agar tata letaknya tetap rapi.",
            "highlightor_android_lib": "Utilitas Compose untuk walkthrough dan onboarding terpandu. Komponen mengukur batas target saat runtime, meredupkan area lain, dan melangkah dalam urutan memakai API bergaya builder. Sentuhan di luar area fokus diblokir dan panah serta label dapat ditata sesuai tema aplikasi. Saya uji pada layar yang kaya gestur untuk memastikan tidak mengganggu scroll atau fling. Kodenya cukup kecil sehingga mudah dibaca dan disesuaikan.",
            "trafficsense_kotlin": "Eksperimen Android dan IoT yang bereaksi pada data real time. Aplikasi membaca pembaruan lokasi, menumpuk rute di Google Maps, dan menyarankan carpool untuk mengurangi waktu tempuh dan paparan. Mesin aturan kecil memilih rute berdasarkan lalu lintas dan titik jemput bersama. Lapisan data ditulis dengan Kotlin yang langsung sehingga perilakunya mudah diikuti. Keputusan saya catat untuk membantu penyetelan aturan. Cocok sebagai titik awal proyek mobilitas yang ingin menguji ide dengan cepat.",
            "ndorokojo_kotlin": "Marketplace ternak yang fokus pada alur sederhana. Penjual mengunggah listing lewat form singkat, pembeli menyaring berdasarkan jenis dan lokasi, dan kedua pihak mendapat notifikasi saat ada kecocokan. OSMDroid menangani peta sehingga aplikasi tetap ringan. Daftar dioptimalkan untuk ponsel kelas bawah namun tetap responsif. Saya sertakan alat admin kecil untuk membersihkan spam dan menjaga feed tetap bersih.",
            "jukee_java": "Pemutar musik berbasis Java dengan fitur playlist yang dapat di-host. Playlist tersinkron lewat Firebase sehingga teman bisa memuat set yang sama dalam hitungan detik. Pemutaran halus berkat service sederhana dan notifikasi yang rapi. UI menghindari hiasan berlebihan agar tetap cepat. Lapisan penyimpanan memiliki antarmuka yang jelas sehingga mudah diganti backend-nya bila diperlukan. Contoh yang baik bahwa aplikasi Android klasik masih bisa terasa enak dipakai.",
            "my_heavy_equipment_kotlin": "Pembantu perawatan yang ditujukan untuk kerja lapangan. Aplikasi memindai QR untuk mengambil data aset, menyimpan catatan secara lokal, lalu membuat ringkasan PDF yang bisa dikirim ke atasan. API REST kecil dan mudah ditebak sehingga gampang dimock saat pengujian. Pekerjaan offline diantrikan dan dicoba ulang ketika jaringan kembali. Layar menghindari keruwetan dan alur menjaga pengguna tetap berada dalam satu konteks sampai tugas selesai.",
            "beataco_java_swing": "Alat desktop untuk siaran Telegram yang mengutamakan kendali. Anda menyusun pesan, memilih target, menjadwalkan pengiriman, lalu memantau log ringkas untuk hasil. Aplikasi terhubung ke Telegram Bot API dan menyimpan setelan dasar antar sesi. UI memakai Swing dengan default yang masuk akal dan pintasan keyboard untuk operator yang lama bekerja di aplikasi. Tujuannya bukan tampil mencolok, melainkan stabil dan bisa diandalkan.",
            "beritain_kotlin": "Aplikasi berita Android yang mengejar perilaku yang dapat diprediksi. Arsitektur MVVM dengan batas modul yang tegas agar fitur tidak saling mengikat. Artikel disimpan terenkripsi dengan SQLCipher dan dependensi diatur oleh Koin. Panggilan jaringan dipasangi pin dan WorkManager menangani refresh di latar. Saya uji state kosong dan jalur jaringan buruk sehingga kegagalan tetap terasa wajar bagi pengguna.",
            "ecoquest_kotlin": "Aplikasi keberlanjutan dengan lapisan permainan yang ringan. Pengguna memilih quest kecil, mengumpulkan poin, dan melihat posisi pada papan peringkat. Tumpukan teknologi memakai MVVM dengan Firebase untuk sinkronisasi dan analitik sederhana untuk mengetahui quest yang paling efektif. Pengingat dibuat lembut dan bisa dimatikan agar tidak terasa mengganggu. Warna dan ukuran target sentuh dibuat ramah perangkat lama.",
            "sakuku_kotlin": "Aplikasi keuangan pribadi yang menjaga ketenangan. Saldo dan target berada di satu layar dan Anda bisa menggali detail tanpa kehilangan konteks. Saya menulis view khusus kecil untuk grafik agar tidak perlu pustaka berat dan menyesuaikannya untuk perangkat dengan memori rendah. Data tersinkron melalui Firebase sehingga pindah perangkat tidak merepotkan. Kodenya bersih sehingga kontributor baru bisa menambah layar dalam satu hari kerja.",
            "examine_kotlin": "Pemindai yang menganggap keamanan sebagai bagian alami dari alur. Kode dibaca, payload dienkripsi dengan AES, dan setiap aksi diikat ke id perangkat untuk ketertelusuran. Retrofit menangani permintaan dan jejak audit disimpan agar mudah diekspor. Saya tambahkan prompt yang jelas untuk kasus gagal agar pengguna tidak tersesat. Hasil akhirnya tegas namun tidak terasa berat.",
            "hangman_java": "Gim hangman kecil di Android yang dibuat untuk bermain cepat. Berjalan sepenuhnya offline dan tidak pernah mengganggu. Paket kata tersimpan di aplikasi, progres disimpan lokal, dan UI besar serta mudah dibaca. Kode menunjukkan pemisahan yang jelas antara loop gim dan tampilan sehingga cocok dijadikan contoh belajar.",
            "bankit_java": "Contoh aplikasi bergaya perbankan yang menonjolkan alur yang jelas tanpa bising. Layar login, transfer, dan riwayat memakai pola yang sudah dikenal tim sehingga mudah dikembangkan. Daftar dan formulir rapi dan kodenya sengaja memakai Java murni. Basis yang baik saat perlu menunjukkan ke pemangku kepentingan seperti apa jalur sederhana itu.",
            "laundry_compose": "UI Compose untuk layanan laundry yang menekankan komponen yang bisa diprediksi. Beranda, layanan, dan alur pesanan berbagi satu sistem desain dan seluruh komponen punya preview. Pengelola state dibuat tipis, theming konsisten, dan semuanya siap menerima endpoint nyata. Saya mengukur beberapa daftar besar agar gulir tetap mulus di ponsel hemat.",
            "picdf_compose": "Alat untuk menggabungkan gambar menjadi satu berkas PDF dengan langkah yang singkat. Pilih foto, ubah urutan dengan seret lepas, beri judul, lalu ekspor memakai PdfDocument. Lembar berbagi muncul segera setelah berkas selesai dan aplikasi menyimpan daftar terbaru untuk akses cepat. Kode menghindari pekerjaan tersembunyi di main thread sehingga UI tetap responsif ketika ekspor berjalan.",
            "aromaloka_kotlin": "Proyek UI slicing yang meniru layout referensi dengan cermat. ConstraintLayout menangani bagian yang padat dan MotionLayout menambah transisi kecil di tempat yang tepat. Saya menulis catatan tentang jarak dan rasio di dalam kode agar serah terima mudah. Tujuan saya bukan membuat ulang desain, melainkan mengirim layout yang setia dan siap dikembangkan.",
            "diabetless_kotlin": "UI slicing untuk kesehatan yang mengutamakan ketenangan dan kejelasan. Formulir memakai label yang jelas dan input mask untuk mengurangi kesalahan. Pilihan warna mengikuti target aksesibilitas. Navigasi dibuat dangkal dan pesan galat menunjuk langsung ke bidang yang bermasalah. Struktur mengikuti pola umum sehingga endpoint nyata bisa masuk tanpa bongkar pasang besar.",
            "painthings_kotlin": "UI slicing marketplace seni dengan fokus pada gambar. Ada grid, tampilan detail dengan galeri yang bersih, keranjang sederhana, dan checkout palsu agar alur bisa diuji sampai selesai. Pemanggilan gambar terasa mulus dan layout tetap nyaman pada layar kecil. Tujuan utama adalah menonjolkan visual dan menjaga formulir agar tidak menghalangi.",
            "capstone_kotlin": "Aplikasi konsep yang menyatukan beberapa layar menjadi alur yang masuk akal. Navigasi lugas, view model memegang state, dan repository memisahkan akses data. Proyek menyertakan backend palsu kecil agar orang bisa klik sekitar tanpa menyiapkan layanan apa pun. Cocok untuk demo di akhir sprint lalu tetap dipakai sebagai dasar.",
            "cba_java": "UI toko kecantikan di Java yang menutup jalur umum. Daftar produk, detail, keranjang, dan langkah kupon kecil sudah tersedia. SQLite menyimpan cache sehingga aplikasi terasa cepat setelah penggunaan pertama. Kode mengikuti pola Android standar dan menghindari pustaka berat agar mudah dibaca.",
            "gamography_swiftui": "Katalog gim untuk iOS dengan antarmuka SwiftUI yang bersih. Pencarian dan favorit tetap bekerja saat offline, gambar dimuat dengan pipeline asinkron, dan lapisan jaringan tetap tipis sehingga mengganti API tidak menimbulkan stres. Saya menyetel performa daftar untuk ponsel lama dan menambahkan beberapa perbaikan aksesibilitas untuk teks besar. Hasilnya terasa cepat namun tetap mudah dibaca."
        }
    },
    "contact": {
        "title": "Hubungi Saya",
        "description": "Mari bekerja sama! Tinggalkan pesan di bawah atau kirim email langsung.",
        "email_label": "Email",
        "phone_label": "Telepon / Whatsapp / WeChat",
        "find_me_at": "Atau Temukan saya di:"
    },
    "footer": {
        "copyright": "© 2025 I Dirancang dan dikodekan oleh Fakhri Rasyid Saputro"
    },
    "notfound": {
        "message": "Ups! Halaman yang kamu cari tidak ditemukan.",
        "go_home": "Kembali ke Beranda"
    }
}
